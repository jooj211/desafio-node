openapi: 3.0.0
info:
  title: FastMeal API
  description: "API for managing restaurants, products, and orders"
  version: 1.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: "https://virtserver.swaggerhub.com/FastMeal/FastMeal/1.0.0"
  - url: "http://localhost:3000"
paths:
  "/restaurants":
    post:
      summary: Create a new restaurant
      tags:
        - Restaurants
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Restaurants"
      responses:
        "201":
          description: Restaurant created successfully
        "400":
          description: Invalid request body
    get:
      summary: Get all restaurants
      tags:
        - Restaurants
      responses:
        "200":
          description: List of restaurants
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Restaurants"
  "/restaurants/{id}":
    get:
      summary: Get a restaurant by ID
      tags:
        - Restaurant
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the restaurant
      responses:
        "200":
          description: Restaurant found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Restaurants"
        "404":
          description: Restaurant not found
    put:
      summary: Update a restaurant by ID
      tags:
        - Restaurant
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the restaurant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Restaurants"
      responses:
        "200":
          description: Restaurant updated successfully
        "400":
          description: Invalid request body
        "404":
          description: Restaurant not found
    delete:
      summary: Delete a restaurant by ID
      tags:
        - Restaurant
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the restaurant
      responses:
        "200":
          description: Restaurant deleted successfully
        "404":
          description: Restaurant not found
  "/restaurants/{id}/products":
    post:
      summary: Create a new product for a restaurant
      tags:
        - Product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the restaurant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Products"
      responses:
        "201":
          description: Product created successfully
        "400":
          description: Invalid request body
        "404":
          description: Restaurant not found
    get:
      summary: Get all products for a restaurant
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the restaurant
      responses:
        "200":
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Products"
        "404":
          description: Restaurant not found
    delete:
      summary: Delete all products for a restaurant
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the restaurant
      responses:
        "200":
          description: Products deleted successfully
        "404":
          description: Restaurant not found
  "/restaurants/{id}/products/{productId}":
    get:
      summary: Get a product by ID for a restaurant
      tags:
        - Product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the restaurant
        - name: productId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the product
      responses:
        "200":
          description: Product found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products"
        "404":
          description: Restaurant or product not found
    put:
      summary: Update a product by ID for a restaurant
      tags:
        - Product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the restaurant
        - name: productId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Products"
      responses:
        "200":
          description: Product updated successfully
        "400":
          description: Invalid request body
        "404":
          description: Restaurant or product not found
    delete:
      summary: Delete a product by ID for a restaurant
      tags:
        - Product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the restaurant
        - name: productId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the product
      responses:
        "200":
          description: Product deleted successfully
        "404":
          description: Restaurant or product not found
  "/restaurants/{id}/orders":
    post:
      summary: Create a new order for a restaurant
      tags:
        - Orders
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the restaurant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Orders"
      responses:
        "201":
          description: Order created successfully
        "400":
          description: Invalid request body
        "404":
          description: Restaurant not found
    get:
      summary: Get all orders for a restaurant
      tags:
        - Orders
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the restaurant
      responses:
        "200":
          description: List of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Orders"
        "404":
          description: Restaurant not found
    delete:
      summary: Delete all orders for a restaurant
      tags:
        - Orders
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the restaurant
      responses:
        "200":
          description: Orders deleted successfully
        "404":
          description: Restaurant not found
  "/restaurants/{id}/orders/{orderId}":
    get:
      summary: Get an order by ID for a restaurant
      tags:
        - Order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the restaurant
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the order
      responses:
        "200":
          description: Order found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Orders"
        "404":
          description: Restaurant or order not found
    put:
      summary: Update an order by ID for a restaurant
      tags:
        - Order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the restaurant
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Orders"
      responses:
        "200":
          description: Order updated successfully
        "400":
          description: Invalid request body
        "404":
          description: Restaurant or order not found
    delete:
      summary: Delete an order by ID for a restaurant
      tags:
        - Order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the restaurant
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the order
      responses:
        "200":
          description: Order deleted successfully
        "404":
          description: Restaurant or order not found
components:
  schemas:
    Orders:
      type: object
      properties:
        id:
          type: integer
        valor_total:
          type: number
        nome_cliente:
          type: string
        cidade_cliente:
          type: string
        endereco_cliente:
          type: string
        telefone_cliente:
          type: string
        restaurante_id:
          type: integer
    Products:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        descricao:
          type: string
        quantidade:
          type: integer
        preco:
          type: number
        categoria:
          type: string
        id_restaurante:
          type: integer
    Restaurants:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        email:
          type: string
        senha:
          type: string
        categoria:
          type: string
        cidade:
          type: string
        endereco:
          type: string
        telefone:
          type: string